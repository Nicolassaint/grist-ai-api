[pytest]
# Configuration pour Pytest

# Répertoires de tests
testpaths = tests

# Pattern de découverte des tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Options d'affichage
addopts =
    # Affichage verbeux
    -v
    # Afficher les print statements
    -s
    # Afficher le résumé des tests
    --tb=short
    # Couverture de code
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    # Parallélisation (optionnel, décommenter si pytest-xdist installé)
    # -n auto
    # Strict markers
    --strict-markers
    # Ordre des tests (optionnel)
    # --randomly-order

# Markers personnalisés
markers =
    unit: Tests unitaires (fast, isolated)
    integration: Tests d'intégration (slower, requires services)
    slow: Tests lents (peut être skippé en développement)
    asyncio: Tests asynchrones
    architecture: Tests de l'agent d'architecture
    sql: Tests de l'agent SQL
    analysis: Tests de l'agent d'analyse
    router: Tests du router
    grist: Tests nécessitant l'API Grist
    llm: Tests nécessitant l'API OpenAI

# Timeout par défaut pour les tests async (en secondes)
asyncio_mode = auto

# Ignorer certains warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Ignorer les warnings spécifiques de Pydantic
    ignore:Valid config keys have changed:UserWarning

# Configuration de logging pour les tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Fichier de logs pour les tests
log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
